sap.ui.define([
	"sap/ui/core/mvc/Controller",
	"sap/ui/model/json/JSONModel",
	"sap/m/MessageToast"
], function (Controller, JSONModel, MessageToast) {
	"use strict";
	return Controller.extend("zskuapp.controller.UpgradeRequestPopup", {
		/**
		 * Called when a controller is instantiated and its View controls (if available) are already created.
		 * Can be used to modify the View before it is displayed, to bind event handlers and do other one-time initialization.
		 * @memberOf zskuapp.view.UpgradeRequestPopup
		 */
		onInit: function () {

		},
		onBack: function (oEvent) {
			// eslint-disable-next-line sap-no-history-manipulation
			history.go(-1);
		},

		_handleUnlistActionResult: function (sProductId, bSuccess, iRequestNumber, iTotalRequests) {
			// we could create a counter for successful and one for failed requests
			// however, we just assume that every single request was successful and display a success message once
			if (iRequestNumber === iTotalRequests) {
				MessageToast.show(this.getView().getModel("i18n").getResourceBundle().getText("StockRemovedSuccessMsg", [iTotalRequests]));
			}
		},

		DeleteSelectedRow: function (oEvent) {
			//This code was generated by the layout editor.
			MessageToast.show("Item for product with id " + this.getView().getModel().getProperty("ProductType", oEvent.getSource().getBindingContext()) +
				"will be deleted");

			//var oSelectedItem = oEvent.getSource().getParent();
			//	var oPath = oSelectedItem.getBindingContext().getPath();
			//var oIndex = parseInt(oPath.substring(oPath.lastIndexOf('/') + 1).replace(/\D/g, ''));
			var oTable = this.getView().byId("tab1");

			//var idx = oTable.getSelectedIndex();

			//var m = oTable.getModel();
			//	var data = m.getProperty("", oEvent.getSource().getBindingContext());
			var aSelectedProducts, i, sPath, oProduct, oProductId;

			aSelectedProducts = this.byId("tab1").getSelectedItems();
			if (aSelectedProducts.length) {
				for (i = 0; i < aSelectedProducts.length; i++) {
					oProduct = aSelectedProducts[i];
					oProductId = oProduct.getBindingContext().getProperty("ProductType");
					sPath = oProduct.getBindingContextPath();
					this.getView().getModel().remove(sPath, {
						success: this._handleUnlistActionResult.bind(this, oProductId, true, i + 1, aSelectedProducts.length),
						error: this._handleUnlistActionResult.bind(this, oProductId, false, i + 1, aSelectedProducts.length)
					});
					
				}
			} else {
				this._showErrorMessage(this.getModel("i18n").getResourceBundle().getText("TableSelectProduct"));
			}
			
			
			var oSelectedItem = oEvent.getSource().getParent();
			var oPath = oSelectedItem.getBindingContext().getPath();
			var oIndex = parseInt(oPath.substring(oPath.lastIndexOf('/') + 1).replace(/\D/g, ''));
			var oTable = this.getView().byId("tab1");
			
			var oTempData = oTable.getModel().getData();
			oTempData.results.splice(oIndex, 1);
			
			var m = oTable.getModel();
			var data = m.getProperty(oPath);
			var removed = data.splice(oIndex, 1);
			m.setProperty("/SkuRequestSet", data);

		}
	});
});